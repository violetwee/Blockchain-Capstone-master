const assert = require('assert');

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let verifier = artifacts.require("../../zokrates/code/square/verifier.sol")
let data = require("../../zokrates/code/square/proof.json")

contract("TestSquareVerifier", async (accounts) => {
  before('setup contract', async () => {
    this.verifier = await verifier.new({ from: accounts[0] });

  })
  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  describe("Test proof verification", () => {
    it("(verify) can verify the correct proof", async () => {
      let { a, b, c } = data.proof;

      let result = await this.verifier.verifyTx.call(a, b, c, data.inputs);
      assert.equal(result, true, "should be able to verify proof")
    })

    // Test verification with incorrect proof
    it("(verify) can verify the incorrect proof", async () => {
      let { a, b, c } = data.proof;

      let result = await this.verifier.verifyTx.call(a, b, a, data.inputs);
      assert.equal(result, false, "should reject the incorrect proof")
    })
  })
})


